<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>FarmTools</web>
  <name>ClassManagerWikisGroovy</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>FarmTools.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1420066800000</creationDate>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1432298272000</date>
  <contentUpdateDate>1432298272000</contentUpdateDate>
  <version>1.1</version>
  <title>ClassManagerWikisGroovy</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>import com.xpn.xwiki.XWiki;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.doc.XWikiDocument
import com.xpn.xwiki.objects.classes.*;

public class ClassManagementClass {
  public static final String TEXT_PROP = 'text';
  public static final String BOOLEAN_PROP = 'boolean';

  public void AddProperty(fullName, fieldName, fieldPrettyName, type, params, xcontext){
    XWiki xw = xcontext.getContext().getWiki();
    XWikiDocument document = xw.getDocument(fullName, xcontext.getContext());
    BaseClass bclass = document.getXClass();
    
    if (type == TEXT_PROP) {
      bclass.addTextField(fieldName, fieldPrettyName, Integer.parseInt(params.get('size')));
    }
    if (type == BOOLEAN_PROP) {
      bclass.addBooleanField(fieldName, fieldPrettyName, params.get('displayType'))
      BooleanClass newProp = bclass.get(fieldName);
      newProp.setDisplayFormType(params.get('displayFormType'));
      def defaultBooleanValue = params.get('defaultValue');
      if (defaultBooleanValue != null &amp;&amp; defaultBooleanValue != '') {
        newProp.setDefaultValue(Integer.parseInt(defaultBooleanValue));
      }
    }
    xw.saveDocument(document, xcontext.getContext());
  }

  public void UpdateProperty(fullName, fieldName, prettyName, customDisplay, validationRegExp,
      validationMessage, xcontext) {
    XWiki xw = xcontext.getContext().getWiki();
    XWikiDocument document = xw.getDocument(fullName, xcontext.getContext());
    BaseClass bclass = document.getXClass();
    PropertyClass property = (PropertyClass) bclass.get(fieldName);
    def modified = false;
    if (prettyName != '') {
      property.setPrettyName(prettyName) 
      modified = true;
    }
    if (customDisplay != '') {
      property.setCustomDisplay(customDisplay);
      modified = true;
    }
    if (validationRegExp != '') {
      property.setValidationRegExp(validationRegExp);
      modified = true;
    }
    if (validationMessage != '') {
      property.setValidationMessage(validationMessage);
      modified = true;
    }
    if (modified) {
      document.setAuthorReference(xcontext.getUserReference());
      xw.saveDocument(document, xcontext.getContext());
    }
  } 
  
  public def ExistProperty(fullName, fieldName, xcontext) {
    XWikiDocument document = xcontext.getContext().getWiki().getDocument(fullName, xcontext.getContext());
    BaseClass bclass = document.getXClass();
    return bclass.get(fieldName) != null;
  }
}</content>
</xwikidoc>
